worker_processes auto;
# to get access to additional modules from "nginx-extra" package
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 1024;
}

http {
   gzip            on;
   gzip_min_length 1000;
   gzip_proxied    expired no-cache no-store private auth;
   gzip_types      text/plain text/css text/xml
                     application/javascript application/json application/xml application/rss+xml image/svg+xml;
   # neccessary for many server{}-blocks
   server_names_hash_bucket_size 64;
   access_log /var/log/nginx/access.log;
   error_log /var/log/nginx/error.log;
   # more_clear_headers 'server';
   # Common TLS Config
   ssl_certificate     /etc/letsencrypt/live/v000561.fhnw.ch/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/v000561.fhnw.ch/privkey.pem;
   ssl_dhparam         /etc/ssl/dhparam.pem;
   ssl_protocols       TLSv1.2 TLSv1.3;
   ssl_session_cache   shared:SSL:10m;
   ssl_session_timeout 10m;
   ssl_ciphers         "EECDH-AESGCM:EDH+ESGCM:AES256+EECDH:AES256+EDH";
   ssl_prefer_server_ciphers on;
   add_header          Strict-Transport-Security "max-age=31557600; includeSubdomains" always;
   
   #http
   server {
      listen 80 default_server;
      listen [::]:80 default_server;
      return 301 https://$host$request_uri;
   }

      #https
   server {
      server_name v000561.fhnw.ch;
      
      listen 443 ssl http2;
      listen [::]:443 ssl http2;
  
      # container needs to know it doesn't run on "http://some-service-running-inside-docker" 
      proxy_set_header 'X-Forwarded-Host' v000561.fhnw.ch;
      proxy_set_header 'X-Forwarded-Proto' https;
      proxy_set_header 'X-Forwarded-For' $remote_addr;
      proxy_set_header 'X-Forwarded-IP' $remote_addr;

      # Orthanc redirect
      location  /orthanc/  {
         proxy_pass http://orthanc:8042;
         rewrite /orthanc(.*) $1 break;
      }

      # Keycloak redirect
      location /auth {
         proxy_pass http://keycloak:8080;
      }

      # api redirect
      location /api {
         proxy_pass http://api:8081/api;
      }

      # react redirect
      location / {
         proxy_pass http://react:3000/;

         # The following is for the websocket connection of the webpack dev server (https://gist.github.com/simongfxu/ea128160c296f31e41e6)
         proxy_redirect off;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
      }
    }
}