{"ast":null,"code":"var _jsxFileName = \"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/ThumbnailList.jsx\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Thumbnail from './Thumbnail';\nimport SearchFields from './SearchFields';\nimport Comment from './Comment';\nimport { withRouter } from 'react-router-dom';\nimport { Col, Row } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { CommentService } from '../services/CommentService';\nimport TextField from '@material-ui/core/TextField';\nimport keycloak from '../keycloak';\nimport { TagService } from '../services/TagService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThumbnailList extends Component {\n  constructor(props) {\n    super(props);\n    this.updateSearchComment = this.updateSearchComment.bind(this);\n    this.handleAddCommentText = this.handleAddCommentText.bind(this);\n    this.handleAddComment = this.handleAddComment.bind(this);\n    this.handleAddTagText = this.handleAddTagText.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.state = {\n      searchComment: \"\",\n      searchTag: \"\",\n      newComment: \"\",\n      newTag: \"\"\n    };\n  } // Set the last searched Comment\n\n\n  updateSearchComment(newComment) {\n    this.setState({\n      searchComment: newComment\n    });\n  } // Set the last searched Tag\n\n\n  updateSearchTag(newTag) {\n    this.setState({\n      searchTag: newTag\n    });\n  } // Add new Comment to all selected images\n\n\n  handleAddComment() {\n    CommentService.authToken(keycloak.token);\n    CommentService.add(this.state.newComment).then(res => {\n      this.props.selectedImages.map(image => {\n        CommentService.assignComment(image.id, res.data.id);\n      });\n    });\n  } // Add new Tag to all selected images\n\n\n  handleAddTag() {\n    TagService.authToken(keycloak.token);\n    TagService.add(this.state.newTag).then(res => {\n      this.props.selectedImages.map(image => {\n        TagService.assignTag(image.id, res.data.id);\n      });\n    });\n  }\n\n  handleAddCommentText(event) {\n    this.setState({\n      newComment: event.target.value\n    });\n  }\n\n  handleAddTagText(event) {\n    this.setState({\n      newTag: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      images,\n      searchImages,\n      selectedImages,\n      tags,\n      matchingComments,\n      updateMatchingComments\n    } = this.props;\n    return isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(SearchFields, {\n        searchFunction: searchImages,\n        searchComment: this.state.searchComment,\n        updateSearchComment: this.updateSearchComment,\n        updateSearchTag: this.updateSearchTag,\n        tags: tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          lg: 3,\n          id: \"bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"matchingComments\",\n            children: matchingComments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n              comment: comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"add_comment\",\n            label: \"New Comment\",\n            onChange: this.handleAddCommentText,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              margin: \"5px\"\n            },\n            onClick: this.handleAddComment,\n            children: \"Save Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"add_tag\",\n            label: \"New Tag\",\n            onChange: this.handleAddTagText,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              margin: \"5px\"\n            },\n            onClick: this.handleAddTag,\n            children: \"Save Tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), this.props.selectedImages.length > 0 ? /*#__PURE__*/_jsxDEV(LinkContainer, {\n            to: \"/view\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                margin: \"5px\"\n              } //onClick={() => PacsService.find()}\n              ,\n              children: \"Show Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          lg: 9,\n          id: \"bordered\",\n          children: images.map(image => /*#__PURE__*/_jsxDEV(Thumbnail, {\n            updateMatchingComments: updateMatchingComments,\n            selectedImages: selectedImages,\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(ThumbnailList);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/ThumbnailList.jsx"],"names":["React","Component","Button","Thumbnail","SearchFields","Comment","withRouter","Col","Row","LinkContainer","CommentService","TextField","keycloak","TagService","ThumbnailList","constructor","props","updateSearchComment","bind","handleAddCommentText","handleAddComment","handleAddTagText","handleAddTag","state","searchComment","searchTag","newComment","newTag","setState","updateSearchTag","authToken","token","add","then","res","selectedImages","map","image","assignComment","id","data","assignTag","event","target","value","render","isLoading","images","searchImages","tags","matchingComments","updateMatchingComments","comment","width","margin","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;;;AAEA,MAAMC,aAAN,SAA4Bb,SAA5B,CAAsC;AAClCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKK,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTC,MAAAA,UAAU,EAAE,EAHH;AAITC,MAAAA,MAAM,EAAC;AAJE,KAAb;AAMH,GAhBiC,CAmBlC;;;AACAV,EAAAA,mBAAmB,CAACS,UAAD,EAAa;AAC5B,SAAKE,QAAL,CAAc;AAAEJ,MAAAA,aAAa,EAAEE;AAAjB,KAAd;AACH,GAtBiC,CAuB9B;;;AAEJG,EAAAA,eAAe,CAACF,MAAD,EAAS;AACpB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAEE;AAAb,KAAd;AACH,GA3BiC,CA8BlC;;;AACAP,EAAAA,gBAAgB,GAAG;AACfV,IAAAA,cAAc,CAACoB,SAAf,CAAyBlB,QAAQ,CAACmB,KAAlC;AACArB,IAAAA,cAAc,CAACsB,GAAf,CAAmB,KAAKT,KAAL,CAAWG,UAA9B,EAA0CO,IAA1C,CAAgDC,GAAD,IAAS;AACpD,WAAKlB,KAAL,CAAWmB,cAAX,CAA0BC,GAA1B,CAA+BC,KAAD,IAAW;AACrC3B,QAAAA,cAAc,CAAC4B,aAAf,CAA6BD,KAAK,CAACE,EAAnC,EAAuCL,GAAG,CAACM,IAAJ,CAASD,EAAhD;AACH,OAFD;AAGH,KAJD;AAKH,GAtCiC,CAwClC;;;AACAjB,EAAAA,YAAY,GAAG;AACXT,IAAAA,UAAU,CAACiB,SAAX,CAAqBlB,QAAQ,CAACmB,KAA9B;AACAlB,IAAAA,UAAU,CAACmB,GAAX,CAAe,KAAKT,KAAL,CAAWI,MAA1B,EAAkCM,IAAlC,CAAwCC,GAAD,IAAS;AAC5C,WAAKlB,KAAL,CAAWmB,cAAX,CAA0BC,GAA1B,CAA+BC,KAAD,IAAW;AACrCxB,QAAAA,UAAU,CAAC4B,SAAX,CAAqBJ,KAAK,CAACE,EAA3B,EAA+BL,GAAG,CAACM,IAAJ,CAASD,EAAxC;AACH,OAFD;AAGH,KAJD;AAKH;;AAGDpB,EAAAA,oBAAoB,CAACuB,KAAD,EAAQ;AACxB,SAAKd,QAAL,CAAc;AAAEF,MAAAA,UAAU,EAAEgB,KAAK,CAACC,MAAN,CAAaC;AAA3B,KAAd;AACH;;AAEDvB,EAAAA,gBAAgB,CAACqB,KAAD,EAAQ;AACpB,SAAKd,QAAL,CAAc;AAAED,MAAAA,MAAM,EAAEe,KAAK,CAACC,MAAN,CAAaC;AAAvB,KAAd;AACH;;AAIDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA,YAArB;AAAmCb,MAAAA,cAAnC;AAAmDc,MAAAA,IAAnD;AAAyDC,MAAAA,gBAAzD;AAA2EC,MAAAA;AAA3E,QAAsG,KAAKnC,KAAjH;AAGA,WACI8B,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACL;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,YAAD;AAAc,QAAA,cAAc,EAAEE,YAA9B;AAA4C,QAAA,aAAa,EAAE,KAAKzB,KAAL,CAAWC,aAAtE;AACI,QAAA,mBAAmB,EAAE,KAAKP,mBAD9B;AACmD,QAAA,eAAe,EAAI,KAAKY,eAD3E;AAC4F,QAAA,IAAI,EAAEoB;AADlG;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,EAAE,EAAC,UAAvB;AAAA,kCACI;AAAK,YAAA,EAAE,EAAC,kBAAR;AAAA,sBACKC,gBAAgB,CAACd,GAAjB,CAAqBgB,OAAO,iBACzB,QAAC,OAAD;AAAS,cAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,SAAD;AACI,YAAA,EAAE,EAAC,aADP;AAEI,YAAA,KAAK,EAAC,aAFV;AAGI,YAAA,QAAQ,EAAE,KAAKjC,oBAHnB;AAII,YAAA,KAAK,EAAE;AAAEkC,cAAAA,KAAK,EAAE;AAAT;AAJX;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAaI,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,WADZ;AAEI,YAAA,KAAK,EAAC,SAFV;AAGI,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAHX;AAII,YAAA,OAAO,EAAE,KAAKlC,gBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAqBI,QAAC,SAAD;AACI,YAAA,EAAE,EAAC,SADP;AAEI,YAAA,KAAK,EAAC,SAFV;AAGI,YAAA,QAAQ,EAAE,KAAKC,gBAHnB;AAII,YAAA,KAAK,EAAE;AAAEgC,cAAAA,KAAK,EAAE;AAAT;AAJX;AAAA;AAAA;AAAA;AAAA,kBArBJ,eA2BI,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,WADZ;AAEI,YAAA,KAAK,EAAC,SAFV;AAGI,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAHX;AAII,YAAA,OAAO,EAAE,KAAKhC,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BJ,EAoCM,KAAKN,KAAL,CAAWmB,cAAX,CAA0BoB,MAA1B,GAAmC,CAApC,gBACD,QAAC,aAAD;AAAe,YAAA,EAAE,EAAC,OAAlB;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,OAAO,EAAC,WADZ;AAEI,cAAA,KAAK,EAAC,SAFV;AAGI,cAAA,KAAK,EAAE;AAAED,gBAAAA,MAAM,EAAE;AAAV,eAHX,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADC,GAWC,IA/CN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAmDI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,EAAE,EAAC,UAAvB;AAAA,oBACKP,MAAM,CAACX,GAAP,CAAWC,KAAK,iBACb,QAAC,SAAD;AAAW,YAAA,sBAAsB,EAAEc,sBAAnC;AAA2D,YAAA,cAAc,EAAEhB,cAA3E;AAA2F,YAAA,KAAK,EAAEE;AAAlG;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAkFH;;AAnJiC;;AAqJtC,oBAAe/B,UAAU,CAACQ,aAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Thumbnail from './Thumbnail'\nimport SearchFields from './SearchFields'\nimport Comment from './Comment';\nimport { withRouter } from 'react-router-dom'\nimport { Col, Row } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { CommentService } from '../services/CommentService'\nimport TextField from '@material-ui/core/TextField';\nimport keycloak from '../keycloak'\nimport {TagService} from '../services/TagService'\n\nclass ThumbnailList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.updateSearchComment = this.updateSearchComment.bind(this);\n        this.handleAddCommentText = this.handleAddCommentText.bind(this);\n        this.handleAddComment = this.handleAddComment.bind(this);\n        this.handleAddTagText = this.handleAddTagText.bind(this);\n        this.handleAddTag = this.handleAddTag.bind(this);\n\n        this.state = {\n            searchComment: \"\",\n            searchTag: \"\",\n            newComment: \"\",\n            newTag:\"\",\n        };\n    }\n\n\n    // Set the last searched Comment\n    updateSearchComment(newComment) {\n        this.setState({ searchComment: newComment });\n    }\n        // Set the last searched Tag\n\n    updateSearchTag(newTag) {\n        this.setState({ searchTag: newTag });\n    }\n\n\n    // Add new Comment to all selected images\n    handleAddComment() {\n        CommentService.authToken(keycloak.token)\n        CommentService.add(this.state.newComment).then((res) => {\n            this.props.selectedImages.map((image) => {\n                CommentService.assignComment(image.id, res.data.id)\n            })\n        })\n    }\n\n    // Add new Tag to all selected images\n    handleAddTag() {\n        TagService.authToken(keycloak.token)\n        TagService.add(this.state.newTag).then((res) => {\n            this.props.selectedImages.map((image) => {\n                TagService.assignTag(image.id, res.data.id)\n            })\n        })\n    }\n\n\n    handleAddCommentText(event) {\n        this.setState({ newComment: event.target.value })\n    }\n\n    handleAddTagText(event) {\n        this.setState({ newTag: event.target.value })\n    }\n\n\n\n    render() {\n        const { isLoading, images, searchImages, selectedImages, tags, matchingComments, updateMatchingComments } = this.props;\n\n\n        return (\n            isLoading ? <p>Loading...</p> : (\n                <div className=\"mt-3\">\n                    <SearchFields searchFunction={searchImages} searchComment={this.state.searchComment} \n                        updateSearchComment={this.updateSearchComment} updateSearchTag = {this.updateSearchTag} tags={tags} />\n\n                    <Row>\n                        <Col md={12} lg={3} id=\"bordered\">\n                            <div id=\"matchingComments\">\n                                {matchingComments.map(comment =>\n                                    <Comment comment={comment} />\n                                )}\n                            </div>\n\n                            <TextField\n                                id=\"add_comment\"\n                                label=\"New Comment\"\n                                onChange={this.handleAddCommentText}\n                                style={{ width: \"100%\" }}\n                            />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: \"5px\" }}\n                                onClick={this.handleAddComment}\n                            >\n                                Save Comment\n                            </Button>\n                            <TextField\n                                id=\"add_tag\"\n                                label=\"New Tag\"\n                                onChange={this.handleAddTagText}\n                                style={{ width: \"100%\" }}\n                            />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={{ margin: \"5px\" }}\n                                onClick={this.handleAddTag}\n                            >\n                                Save Tag\n                            </Button>\n\n                            {(this.props.selectedImages.length > 0) ?\n                            <LinkContainer to=\"/view\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={{ margin: \"5px\" }}\n                                    //onClick={() => PacsService.find()}\n                                >\n                                    Show Images\n                                </Button>\n                            </LinkContainer>\n                            : null}\n\n                        </Col>\n                        <Col md={12} lg={9} id=\"bordered\">\n                            {images.map(image =>\n                                <Thumbnail updateMatchingComments={updateMatchingComments} selectedImages={selectedImages} image={image} />\n                            )}\n                        </Col>\n                    </Row>\n\n                    {/* <table className=\"table\">\n                        <thead>\n                            <tr><th>ID</th><th>Description</th><th>Thumbnail</th><th>PACS</th></tr>\n                        </thead>\n                        <tbody>\n                            {images.map(image =>\n                                <tr key={image.id}>\n                                    <td>{image.id}</td>\n                                    <td>{image.description}</td>\n                                    <td>{image.thumbnail}</td>\n                                    <td>{image.pacs_id}</td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table> */}\n                </div>\n            )\n        )\n    }\n}\nexport default withRouter(ThumbnailList)"]},"metadata":{},"sourceType":"module"}