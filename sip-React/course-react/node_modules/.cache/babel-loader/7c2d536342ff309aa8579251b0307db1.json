{"ast":null,"code":"var _jsxFileName = \"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/SearchFields.jsx\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Col, Row } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport { Typography } from '@material-ui/core';\nimport { TagService } from '../services/TagService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchFields extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSliderChange = (event, newValue) => {\n      var items = document.getElementsByClassName(\"thumbnail_img\");\n\n      for (var i = 0; i < items.length; i++) {\n        items[i].style.width = newValue + \"px\";\n        items[i].style.height = newValue + \"px\";\n      }\n    };\n\n    this.onTagsChange = (event, values) => {\n      var currentList = [];\n      this.props.updateSearchTags(values);\n      values.map(value => this.props.tags.map(tag => tag.id === value.id ? currentList.push(tag) : null));\n      this.setState({\n        searchTags: currentList\n      });\n    };\n\n    this.state = {\n      searchTags: [],\n      textFieldValue: '',\n      newSearchCommentValue: props.searchComment,\n      newSearchTags: props.searchTags,\n      lastUsedTags: []\n    };\n  } // adjust thumbnail sizes\n\n\n  // Search when button is clicked\n  handleSearch(values) {\n    this.props.updateSearchComment(this.state.newSearchCommentValue);\n    this.props.searchFunction(this.state.newSearchCommentValue, this.state.searchTags);\n    console.log(this.props.searchTags);\n  } // Update State when modifying Comment\n\n\n  setNewComment(event) {\n    this.setState({\n      newSearchCommentValue: event.target.value\n    });\n  }\n\n  setNewTags(event, values) {\n    console.log(values);\n    this.setState({\n      newSearchTags: event.target.value\n    });\n  }\n\n  // Rendering\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: this.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          minHeight: \"70px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            multiple: true,\n            id: \"combo-box-demo\",\n            options: this.props.tags.map(tag => {\n              return {\n                name: tag.hashtagtxt,\n                id: tag.id\n              };\n            }),\n            defaultValue: this.props.searchTags,\n            getOptionLabel: option => option.name,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 54\n            }, this),\n            style: {\n              width: \"100%\"\n            },\n            onChange: this.onTagsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"comment-search\",\n            label: \"Comments\",\n            type: \"search\",\n            defaultValue: this.props.searchComment,\n            onChange: this.setNewComment.bind(this),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              this.handleSearch();\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              margin: \"5px\"\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          xs: 7,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Thumbnail size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            getAriaValueText: this.valuetext,\n            \"aria-labelledby\": \"discrete-slider\",\n            valueLabelDisplay: \"auto\",\n            step: 50,\n            marks: true,\n            min: 50,\n            max: 300,\n            defaultValue: 150,\n            id: \"sizeSlider\",\n            style: {\n              width: \"100%\"\n            },\n            onChange: this.handleSliderChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchFields;","map":{"version":3,"sources":["/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/SearchFields.jsx"],"names":["React","Component","TextField","Autocomplete","Col","Row","Button","Slider","Typography","TagService","SearchFields","constructor","props","handleSliderChange","event","newValue","items","document","getElementsByClassName","i","length","style","width","height","onTagsChange","values","currentList","updateSearchTags","map","value","tags","tag","id","push","setState","searchTags","state","textFieldValue","newSearchCommentValue","searchComment","newSearchTags","lastUsedTags","handleSearch","updateSearchComment","searchFunction","console","log","setNewComment","target","setNewTags","render","root","minHeight","name","hashtagtxt","option","params","bind","margin","textAlign","valuetext"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Col, Row } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport { Typography } from '@material-ui/core';\nimport { TagService } from '../services/TagService'\n\n\nclass SearchFields extends Component {\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            searchTags: [],\n            textFieldValue: '',\n            newSearchCommentValue: props.searchComment,\n            newSearchTags: props.searchTags,\n            lastUsedTags: [],\n\n        };\n    }\n\n\n    // adjust thumbnail sizes\n    handleSliderChange = (event, newValue) => {\n        var items = document.getElementsByClassName(\"thumbnail_img\")\n\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.width = (newValue + \"px\");\n            items[i].style.height = (newValue + \"px\");\n        }\n    };\n\n    // Search when button is clicked\n    handleSearch(values) {\n        this.props.updateSearchComment(this.state.newSearchCommentValue);\n        this.props.searchFunction(this.state.newSearchCommentValue, this.state.searchTags);\n        console.log(this.props.searchTags)\n    }\n\n    // Update State when modifying Comment\n    setNewComment(event) {\n        this.setState({ newSearchCommentValue: event.target.value });\n    }\n    setNewTags(event, values) {\n        console.log(values)\n        this.setState({ newSearchTags: event.target.value });\n    }\n\n\n    onTagsChange = (event, values) => {\n        var currentList = []\n        this.props.updateSearchTags(values);\n        values.map(value =>\n            this.props.tags.map(tag =>\n            (tag.id === value.id ? currentList.push(tag)\n                : null)));\n\n        this.setState({\n            searchTags: currentList\n        });\n    }\n\n    // Rendering\n    render() {\n        return (\n            <form className={this.root} noValidate autoComplete=\"off\">\n\n                {/* OLD: Search by PACS ID of images\n                <TextField\n                    id=\"PictureID-search\"\n                    label=\"Picture ID\"\n                    type=\"search\"\n                    className=\"searchElement\"\n                /> */}\n                <Row style={{ minHeight: \"70px\" }}>\n                    <Col md={4}>\n                        <Autocomplete\n                            multiple\n                            id=\"combo-box-demo\"\n                            options={\n                                this.props.tags.map(tag => {\n                                    return {\n                                        name: tag.hashtagtxt,\n                                        id: tag.id\n                                    }\n                                })\n                            }\n                            defaultValue={this.props.searchTags}\n\n                            getOptionLabel={(option) => option.name}\n                            renderInput={(params) => <TextField {...params} label=\"Tag\" />}\n                            style={{ width: \"100%\" }}\n                            onChange={this.onTagsChange}\n                        />\n                    </Col>\n                    <Col md={4}>\n                        <TextField\n                            id=\"comment-search\"\n                            label=\"Comments\"\n                            type=\"search\"\n                            defaultValue={this.props.searchComment}\n                            onChange={this.setNewComment.bind(this)}\n                            style={{ width: \"100%\" }}\n                        />\n                    </Col>\n                    <Col md={2} xs={5}>\n                        <Button\n                            onClick={() => { this.handleSearch() }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{ margin: \"5px\" }}\n                        >\n                            Search\n                        </Button>\n                    </Col>\n                    <Col md={2} xs={7}>\n                        <Typography style={{ textAlign: \"center\" }}>\n                            Thumbnail size\n                        </Typography>\n                        <Slider\n                            getAriaValueText={this.valuetext}\n                            aria-labelledby=\"discrete-slider\"\n                            valueLabelDisplay=\"auto\"\n                            step={50}\n                            marks\n                            min={50}\n                            max={300}\n                            defaultValue={150}\n                            id=\"sizeSlider\"\n                            style={{ width: \"100%\" }}\n\n                            onChange={this.handleSliderChange}\n                        />\n\n                    </Col>\n                </Row>\n            </form>\n        );\n\n    }\n}\nexport default SearchFields"]},"metadata":{},"sourceType":"module"}