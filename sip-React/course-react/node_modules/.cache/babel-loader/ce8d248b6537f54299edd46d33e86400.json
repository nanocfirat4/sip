{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../config';\nexport const TagService = {\n  findAll,\n  findById,\n  add,\n  authToken\n};\n\nfunction findAll() {\n  return instance.get('/api/hashtags');\n}\n\nfunction findById(id) {\n  return instance.get(`/api/hashtag/${id}`);\n}\n\nfunction add(hashtagtxt) {\n  return instance.post(`/api/hashtag`, {\n    hashtagtxt: hashtagtxt\n  });\n}\n\nfunction assignTag(imageId, TagId) {\n  return instance.post(`/api/image/${imageId}/saveTag/${TagId}`);\n} // -- Axios https://github.com/axios/axios#config-defaults\n\n\nconst instance = axios.create({\n  baseURL: `${config.API_BASE_URL}`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\ninstance.interceptors.request.use(request => {\n  console.log('Starting Request', JSON.stringify(request, null, 2));\n  return request;\n});\ninstance.interceptors.response.use(response => {\n  console.log('Response:', JSON.stringify(response, null, 2));\n  return response;\n}); // -- Helper functions\n\nexport function authToken(token) {\n  // set default header to be sent with every request\n  instance.defaults.headers.common.Authorization = `Bearer ${token}`;\n}","map":{"version":3,"sources":["/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/services/TagService.jsx"],"names":["axios","config","TagService","findAll","findById","add","authToken","instance","get","id","hashtagtxt","post","assignTag","imageId","TagId","create","baseURL","API_BASE_URL","headers","interceptors","request","use","console","log","JSON","stringify","response","token","defaults","common","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,OADsB;AAEtBC,EAAAA,QAFsB;AAGtBC,EAAAA,GAHsB;AAItBC,EAAAA;AAJsB,CAAnB;;AAMP,SAASH,OAAT,GAAmB;AACf,SAAOI,QAAQ,CAACC,GAAT,CAAa,eAAb,CAAP;AACH;;AACD,SAASJ,QAAT,CAAkBK,EAAlB,EAAsB;AAClB,SAAOF,QAAQ,CAACC,GAAT,CAAc,gBAAeC,EAAG,EAAhC,CAAP;AACH;;AACD,SAASJ,GAAT,CAAaK,UAAb,EAAyB;AACrB,SAAOH,QAAQ,CAACI,IAAT,CAAe,cAAf,EAA8B;AACjCD,IAAAA,UAAU,EAAEA;AADqB,GAA9B,CAAP;AAGH;;AAED,SAASE,SAAT,CAAmBC,OAAnB,EAA4BC,KAA5B,EAAmC;AAC/B,SAAOP,QAAQ,CAACI,IAAT,CAAe,cAAaE,OAAQ,YAAWC,KAAM,EAArD,CAAP;AACH,C,CAED;;;AACA,MAAMP,QAAQ,GAAGP,KAAK,CAACe,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAG,GAAEf,MAAM,CAACgB,YAAa,EADN;AAE1BC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFiB,CAAb,CAAjB;AAOAX,QAAQ,CAACY,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCD,OAAO,IAAI;AACzCE,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,IAAI,CAACC,SAAL,CAAeL,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAhC;AACA,SAAOA,OAAP;AACH,CAHD;AAKAb,QAAQ,CAACY,YAAT,CAAsBO,QAAtB,CAA+BL,GAA/B,CAAmCK,QAAQ,IAAI;AAC3CJ,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,IAAI,CAACC,SAAL,CAAeC,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAzB;AACA,SAAOA,QAAP;AACH,CAHD,E,CAKA;;AACA,OAAO,SAASpB,SAAT,CAAmBqB,KAAnB,EAA0B;AAC7B;AACApB,EAAAA,QAAQ,CAACqB,QAAT,CAAkBV,OAAlB,CAA0BW,MAA1B,CAAiCC,aAAjC,GAAkD,UAASH,KAAM,EAAjE;AACH","sourcesContent":["import axios from 'axios'\nimport { config } from '../config'\n\nexport const TagService = {\n    findAll,\n    findById,\n    add,\n    authToken\n}\nfunction findAll() {\n    return instance.get('/api/hashtags')\n}\nfunction findById(id) {\n    return instance.get(`/api/hashtag/${id}`)\n}\nfunction add(hashtagtxt) {\n    return instance.post(`/api/hashtag`, {\n        hashtagtxt: hashtagtxt\n    })\n}\n\nfunction assignTag(imageId, TagId) {\n    return instance.post(`/api/image/${imageId}/saveTag/${TagId}`)\n}\n\n// -- Axios https://github.com/axios/axios#config-defaults\nconst instance = axios.create({\n    baseURL: `${config.API_BASE_URL}`,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n})\n\ninstance.interceptors.request.use(request => {\n    console.log('Starting Request', JSON.stringify(request, null, 2))\n    return request\n})\n\ninstance.interceptors.response.use(response => {\n    console.log('Response:', JSON.stringify(response, null, 2))\n    return response\n})\n\n// -- Helper functions\nexport function authToken(token) {\n    // set default header to be sent with every request\n    instance.defaults.headers.common.Authorization = `Bearer ${token}`\n}"]},"metadata":{},"sourceType":"module"}