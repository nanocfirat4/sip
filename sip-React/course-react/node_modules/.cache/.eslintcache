[{"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/index.js":"1","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/App.jsx":"2","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/reportWebVitals.js":"3","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/keycloak.js":"4","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/AppNavBar.jsx":"5","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/ViewMode.jsx":"6","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/ThumbnailList.jsx":"7","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/About.jsx":"8","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/services/ImageService.jsx":"9","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/services/TagService.jsx":"10","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/services/CommentService.jsx":"11","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/config.js":"12","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/SearchFields.jsx":"13","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/Comment.jsx":"14","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/Thumbnail.jsx":"15","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/services/PacsService.jsx":"16"},{"size":1963,"mtime":1618219894922,"results":"17","hashOfConfig":"18"},{"size":4014,"mtime":1618337473002,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1618219894922,"results":"20","hashOfConfig":"18"},{"size":222,"mtime":1618219894922,"results":"21","hashOfConfig":"18"},{"size":1090,"mtime":1618219894918,"results":"22","hashOfConfig":"18"},{"size":2335,"mtime":1618219894918,"results":"23","hashOfConfig":"18"},{"size":6626,"mtime":1618416628535,"results":"24","hashOfConfig":"18"},{"size":129,"mtime":1618219894918,"results":"25","hashOfConfig":"18"},{"size":1028,"mtime":1618396369240,"results":"26","hashOfConfig":"18"},{"size":1072,"mtime":1618329866514,"results":"27","hashOfConfig":"18"},{"size":1061,"mtime":1618236755180,"results":"28","hashOfConfig":"18"},{"size":399,"mtime":1618219894918,"results":"29","hashOfConfig":"18"},{"size":5180,"mtime":1618416842024,"results":"30","hashOfConfig":"18"},{"size":387,"mtime":1618219894918,"results":"31","hashOfConfig":"18"},{"size":2475,"mtime":1618219894918,"results":"32","hashOfConfig":"18"},{"size":1007,"mtime":1618219894922,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"v26w1z",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/index.js",["72"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ReactKeycloakProvider } from '@react-keycloak/web'\nimport keycloak from './keycloak'\n\n// const eventLogger = (event, error) => {\n//   console.log('onKeycloakEvent', event, error)\n// }\n\n// const tokenLogger = (tokens) => {\n//   console.log('onKeycloakTokens', tokens)\n// }\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <ReactKeycloakProvider keycloak={keycloak} authClient={keycloak} onEvent={eventLogger} onTokens={tokenLogger}>\n//       <App />\n//     </ReactKeycloakProvider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\n//Initialization of the keycloak instance\nkeycloak.init({ onLoad: 'login-required' }).success((authenticated) => {\n  console.log(keycloak);\n  console.log(authenticated);\n  // console.log(getState().keycloakLogin);\n  if (!authenticated) {\n      window.location.reload();\n  } else {\n      console.info(\"Authenticated\");\n  }\n\n  //React Render on authentication\n  ReactDOM.render(<App />, document.getElementById('root'));\n\n  //store authentication tokens in sessionStorage\n  sessionStorage.setItem('authentication', keycloak.token);\n  sessionStorage.setItem('refreshToken', keycloak.refreshToken);\n\n  //to regenerate token on expiry\n  setTimeout(() => {\n      keycloak.updateToken(70).success((refreshed) => {\n          if (refreshed) {\n              console.debug('Token refreshed' + refreshed);\n          } else {\n              console.warn('Token not refreshed, valid for '\n                  + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n          }\n      }).error(() => {\n          console.error('Failed to refresh token');\n      });\n\n\n  }, 60000)\n\n}).error(() => {\n  console.error(\"Authenticated Failed\");\n});\n\nreportWebVitals();\n",["73","74"],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/App.jsx",["75"],"import React, { Component } from 'react'\nimport ViewMode from './components/ViewMode'\nimport AppNavBar from './components/AppNavBar'\nimport { ImageService } from './services/ImageService'\nimport { CommentService } from './services/CommentService'\nimport { TagService } from './services/TagService'\nimport keycloak from './keycloak'\nimport ThumbnailList from './components/ThumbnailList'\nimport About from './components/About'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport './App.css'\nimport { Container } from 'react-bootstrap'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchImages = this.searchImages.bind(this)\n    this.updateComments = this.updateComments.bind(this)\n    this.updateMatchingComments = this.updateMatchingComments.bind(this)\n    \n    this.state = {\n      isLoading: false,\n      selectedImages: [],\n      images: [],\n      comments: [],\n      tags: [],\n      matchingComments: []\n    };\n  }\n\n  // Load all images, Tags and Comments on App start\n  componentDidMount() {\n    this.setState({ isLoading: true })\n    ImageService.authToken(keycloak.token)\n    ImageService.findAll().then((res) => {\n      this.setState({ images: res.data });\n    });\n\n    CommentService.authToken(keycloak.token)\n    CommentService.findAll().then((res) => {\n      this.setState({ comments: res.data });\n    });\n\n    TagService.authToken(keycloak.token)\n    TagService.findAll().then((res) => {\n      this.setState({ tags: res.data })\n      console.log(this.state.tags)\n    });\n\n    this.setState({ isLoading: false })\n  }\n\n  // Search images by txt\n  // TODO -> use the parameter of the function instead of all tags\n  searchImages(textTokens, searchTags) {\n    this.setState({ isLoading: true })\n    ImageService.authToken(keycloak.token)\n    ImageService.findByFilter(textTokens, searchTags).then((res) => {\n      this.setState({\n        images: res.data,\n        selectedImages: [],\n        matchingComments: [],\n        isLoading: false\n      });\n    });\n  }\n\n  // Check which comments do all selected images have in common\n  updateMatchingComments() {\n    var allComments = this.state.selectedImages.map(image => { return image.imageCommentsList.map(comment => { return comment.id }) });\n    var matchingComments = []\n\n    if (allComments.length > 0) {\n      // Filter Comments\n      var result = allComments.shift().filter(function (v) {\n        return allComments.every(function (a) {\n          return a.indexOf(v) !== -1;\n        });\n      });\n      // Add Comments to state\n      for (var j = 0; j < this.state.comments.length; j++) {\n        for (var i = 0; i < result.length; i++) {\n          if (this.state.comments[j].id == result[i]) {\n            matchingComments.push(this.state.comments[j]);\n          }\n        }\n      }\n    }\n    this.setState({\n      matchingComments: matchingComments\n    });\n  }\n\n\n  // Update all Coments\n  updateComments() {\n    CommentService.authToken(keycloak.token)\n    CommentService.findAll().then((res) => {\n      this.setState({ comments: res.data });\n    });\n  }\n\n\n\n  render() {\n    const { isLoading, images, selectedImages, tags, matchingComments } = this.state;\n\n    return (\n      <Container fluid>\n\n        {keycloak.token }\n\n        <Router>\n          <AppNavBar />\n          <Switch>\n            <Route exact path='/'>\n              <ThumbnailList tags={tags} isLoading={isLoading} images={images} searchImages={this.searchImages} selectedImages={selectedImages}\n                updateComments={this.updateComments} matchingComments={matchingComments} updateMatchingComments={this.updateMatchingComments} />\n            </Route>\n            <Route path='/about' component={About} />\n            <Route path='/view'>\n              <ViewMode selectedImages={this.state.selectedImages}  matchingComments = {matchingComments} updateMatchingComments={this.updateMatchingComments}/>\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    )\n  }\n}\nexport default App\n","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/reportWebVitals.js",[],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/keycloak.js",[],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/AppNavBar.jsx",[],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/ViewMode.jsx",["76"],"import React, { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Slide } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css';\nimport Comment from './Comment';\n\n\n\n\nexport default class ViewMode extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            currentImage: this.props.selectedImages[0],\n        };\n    }\n\n\n    handleChange(previous, next) {\n        this.setState({currentImage: this.props.selectedImages[next]});\n    }\n    \n\n\n    render() {\n        return (\n\n            <div id=\"imageView\">\n                <div className=\"slide-container\">\n                    <Slide\n                        autoplay={false}\n                        onChange={this.handleChange}\n                    >\n                        {this.props.selectedImages.map(image =>\n                            <div className=\"each-slide\">\n                                <img src={image.thumbnail}\n                                    style={{\n                                        display: 'block',\n                                        margin: 'auto'\n                                    }} />\n                            </div>\n                        )}\n                    </Slide>\n                </div>\n                <Row>\n                    <Col md={12} lg={3} id=\"bordered\">\n                        Kommentare und Tags\n                        </Col>\n                    <Col md={12} lg={9} id=\"bordered\">\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12} lg={3} id=\"bordered\">\n                        Kommentare und Tags in Common<br />\n                        <div id=\"matchingComments\">\n                            {this.props.matchingComments.map(comment =>\n                                <Comment comment={comment} />\n                            )}\n                        </div>\n                    </Col>\n                    <Col md={12} lg={9} id=\"bordered\">\n                        Kommentare zum aktuellen Bild<br />\n                        {this.state.currentImage.imageCommentsList.map(comment => <Comment comment = {comment} />)} \n\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/ThumbnailList.jsx",["77","78"],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/About.jsx",[],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/services/ImageService.jsx",["79"],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/services/TagService.jsx",[],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/services/CommentService.jsx",[],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/config.js",[],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/SearchFields.jsx",["80"],"/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/Comment.jsx",["81"],"import React, { Component } from 'react'\n\n\nclass Comment extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    // Rendering\n    render() {\n\n        return (\n            <div class=\"comment\">\n                {this.props.comment.timestamp}<br />\n                {this.props.comment.commenttxt}<br /><br />\n            </div>\n        )\n    }\n}\nexport default Comment","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/components/Thumbnail.jsx",["82"],"import React, { Component } from 'react'\nimport { Card, CardActionArea, CardMedia, CardContent } from '@material-ui/core';\n\n\nclass Thumbnail extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isHovered: false,\n            checked: this.initCheck(),\n        };\n    }\n\n\n    // Check if the image was selected before\n    initCheck() {\n        for (var i = 0; i < this.props.selectedImages.length; i++) {\n            if (this.props.selectedImages[i] === this.props.image) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    \n    // Add / remove images from selectedImages array\n    selectImage = () => {\n        if (!this.state.checked)\n            this.props.selectedImages.push(this.props.image);\n\n        else {\n            for (var i = 0; i < this.props.selectedImages.length; i++) {\n                if (this.props.selectedImages[i] === this.props.image) {\n                    this.props.selectedImages.splice(i, 1);\n                }\n            }\n        }\n        console.log(this.props.selectedImages);\n        this.props.updateMatchingComments();\n\n        this.setState({\n            checked: !this.state.checked\n        });\n    }\n\n\n    // Display and hide description on hover\n    handleEnter() {\n        this.setState({\n            isHovered: true\n        });\n    }\n\n    handleLeave() {\n        this.setState({\n            isHovered: false\n        });\n    }\n\n    // Rendering\n    render() {\n        return (\n            <div class=\"thumbnail\"\n                onMouseEnter={this.handleEnter.bind(this)}\n                onMouseLeave={this.handleLeave.bind(this)}\n            >\n\n                <Card\n                    onClick={this.selectImage}\n                    style={{\n                        backgroundColor: this.state.checked ? \"lightblue\" : \"\",\n                    }}\n                >\n                    <CardActionArea>\n                        {this.state.isHovered ? <div class=\"thumbnail_description\">{this.props.image.description}</div> : ''}\n                        <CardMedia\n                            title={this.props.image.description}\n                        />\n                        <CardContent>\n                            <img src={this.props.image.thumbnail} className=\"thumbnail_img\" />\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </div>\n        )\n    }\n}\nexport default Thumbnail","/home/firat/Documents/SIP/sip2021-01-sth/sip-React/course-react/src/services/PacsService.jsx",[],{"ruleId":"83","severity":1,"message":"84","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":31},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":85,"column":41,"nodeType":"93","messageId":"94","endLine":85,"endColumn":43},{"ruleId":"95","severity":1,"message":"96","line":39,"column":33,"nodeType":"97","endLine":43,"endColumn":42},{"ruleId":"98","severity":1,"message":"99","line":53,"column":51,"nodeType":"100","messageId":"101","endLine":53,"endColumn":53},{"ruleId":"98","severity":1,"message":"99","line":63,"column":51,"nodeType":"100","messageId":"101","endLine":63,"endColumn":53},{"ruleId":"91","severity":1,"message":"92","line":20,"column":44,"nodeType":"93","messageId":"94","endLine":20,"endColumn":46},{"ruleId":"83","severity":1,"message":"102","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":5,"column":5,"nodeType":"105","messageId":"106","endLine":7,"endColumn":6},{"ruleId":"95","severity":1,"message":"96","line":81,"column":29,"nodeType":"97","endLine":81,"endColumn":95},"no-unused-vars","'ReactKeycloakProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'TagService' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]